dependencies {

    compileOnly "org.projectlombok:lombok:${revLombok}"
    annotationProcessor "org.projectlombok:lombok:${revLombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${revLombok}"

    implementation project(":conductor-common")
    implementation project(":conductor-core")
    implementation project(":conductor-community:persistence:postgres-persistence")

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.core:jackson-core"

    //Metrics
    implementation "io.micrometer:micrometer-registry-prometheus"
    implementation "io.micrometer:micrometer-core"
    implementation "com.netflix.spectator:spectator-reg-micrometer:${revSpectator}"
    implementation "com.netflix.spectator:spectator-reg-metrics3:${revSpectator}"
    implementation "com.netflix.spectator:spectator-api:${revSpectator}"

    implementation 'org.springframework.retry:spring-retry'

    //Flyway for postgres configuration
    implementation "org.flywaydb:flyway-core"

    //Cache
    implementation "com.google.guava:guava:${revGuava}"

    //Lucene
    implementation "org.apache.lucene:lucene-core:${revLucene}"
    implementation "org.apache.lucene:lucene-analyzers-common:${revLucene}"

    //spring
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    testImplementation 'org.hamcrest:hamcrest'
    testImplementation "org.awaitility:awaitility"

    //postgres test container
    testImplementation "org.testcontainers:postgresql:${revTestContainer}"

    //Fake data generator
    testImplementation ('com.github.javafaker:javafaker:1.0.2') {
        exclude group: 'org.yaml', module: 'snakeyaml'
    }
    testImplementation group: 'org.yaml', name: 'snakeyaml', version: '2.0'
}

test {
    useJUnitPlatform()
}
